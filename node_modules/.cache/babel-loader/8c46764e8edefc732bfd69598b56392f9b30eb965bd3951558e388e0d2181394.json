{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\WDP\\\\prj\\\\clinic-app-FE\\\\src\\\\pages\\\\RegistrationExam\\\\RegistrationSystem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Pagination, Form, Button, Row, Col, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationSystem = () => {\n  _s();\n  // State management\n  const [registrations, setRegistrations] = useState([]);\n  const [clinics, setClinics] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [formData, setFormData] = useState({\n    isNewPatient: true,\n    patientData: {\n      id_card: '',\n      name: '',\n      gender: 'male',\n      birth_date: '',\n      phone: '',\n      address: ''\n    },\n    clinic_id: '',\n    doctor_id: '',\n    priority: false,\n    symptoms: '',\n    note: ''\n  });\n\n  // Error state for form submission\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Fetch initial data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch clinics\n        const clinicsRes = await fetch('http://localhost:5001/api/clinics');\n        const clinicsData = await clinicsRes.json();\n        setClinics(clinicsData || []); // Default to empty array if no data\n\n        // Fetch doctors\n        const doctorsRes = await fetch('http://localhost:5001/api/users/doctors');\n        const doctorsData = await doctorsRes.json();\n        setDoctors(doctorsData || []); // Default to empty array if no data\n\n        // Fetch registrations\n        await loadRegistrations(currentPage);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setErrorMessage('Lỗi khi tải dữ liệu, vui lòng thử lại.');\n      }\n    };\n    fetchData();\n  }, [currentPage]);\n\n  // Load registrations with pagination\n  const loadRegistrations = async page => {\n    try {\n      const res = await fetch(`http://localhost:5001/api/registerExam?page=${page}&limit=10`);\n      const data = await res.json();\n      setRegistrations(data.docs);\n      setTotalPages(data.totalPages);\n      setCurrentPage(data.page);\n    } catch (error) {\n      console.error('Error loading registrations:', error);\n      setErrorMessage('Lỗi khi tải danh sách đăng ký, vui lòng thử lại.');\n    }\n  };\n\n  // Validate ID card format\n  const validateIdCard = idCard => {\n    const regex = /^[0-9]{9,12}$/;\n    return regex.test(idCard);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateIdCard(formData.patientData.id_card)) {\n      setErrorMessage('Số CMND không hợp lệ.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5001/api/registerExam', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        await loadRegistrations(currentPage);\n        setFormData({\n          ...formData,\n          patientData: {\n            id_card: '',\n            name: '',\n            gender: 'male',\n            birth_date: '',\n            phone: '',\n            address: ''\n          },\n          symptoms: '',\n          note: ''\n        });\n        setErrorMessage('');\n      } else {\n        setErrorMessage('Đăng ký thất bại, vui lòng thử lại.');\n      }\n    } catch (error) {\n      console.error('Registration failed:', error);\n      setErrorMessage('Có lỗi xảy ra khi gửi form, vui lòng thử lại.');\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith('patientData')) {\n      const field = name.split('.')[1];\n      setFormData({\n        ...formData,\n        patientData: {\n          ...formData.patientData,\n          [field]: value\n        }\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n\n  // Pagination controls\n  const renderPagination = () => /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n      disabled: currentPage === 1,\n      onClick: () => loadRegistrations(currentPage - 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), Array.from({\n      length: totalPages\n    }, (_, i) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      active: i + 1 === currentPage,\n      onClick: () => loadRegistrations(i + 1),\n      children: i + 1\n    }, i + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n      disabled: currentPage === totalPages,\n      onClick: () => loadRegistrations(currentPage + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Danh s\\xE1ch \\u0111\\u0103ng k\\xFD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"STT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"M\\xE3 KCB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"M\\xE3 BN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\\xEAn BN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.isArray(registrations) && registrations.map((reg, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: (currentPage - 1) * 10 + index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reg.medical_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reg.patient_id.patient_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reg.patient_id.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, reg._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), renderPagination(), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-5\",\n      children: \"Th\\xEAm \\u0111\\u0103ng k\\xFD m\\u1EDBi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"S\\u1ED1 CMND\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"patientData.id_card\",\n              value: formData.patientData.id_card,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"H\\u1ECD t\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"patientData.name\",\n              value: formData.patientData.name,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Ph\\xF2ng kh\\xE1m\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"clinic_id\",\n              value: formData.clinic_id,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Ch\\u1ECDn ph\\xF2ng kh\\xE1m\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), Array.isArray(clinics) && clinics.map(clinic => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: clinic._id,\n                children: clinic.name\n              }, clinic._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"B\\xE1c s\\u0129\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"doctor_id\",\n              value: formData.doctor_id,\n              onChange: handleInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Ch\\u1ECDn b\\xE1c s\\u0129\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), Array.isArray(doctors) && doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: doctor._id,\n                children: doctor.name\n              }, doctor._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Tri\\u1EC7u ch\\u1EE9ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              name: \"symptoms\",\n              value: formData.symptoms,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"\\u0110\\u0103ng k\\xFD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationSystem, \"wABOZbbFvsK3Z/c0CqA8KMdXJ9I=\");\n_c = RegistrationSystem;\nexport default RegistrationSystem;\nvar _c;\n$RefreshReg$(_c, \"RegistrationSystem\");","map":{"version":3,"names":["React","useState","useEffect","Table","Pagination","Form","Button","Row","Col","Alert","jsxDEV","_jsxDEV","RegistrationSystem","_s","registrations","setRegistrations","clinics","setClinics","doctors","setDoctors","currentPage","setCurrentPage","totalPages","setTotalPages","formData","setFormData","isNewPatient","patientData","id_card","name","gender","birth_date","phone","address","clinic_id","doctor_id","priority","symptoms","note","errorMessage","setErrorMessage","fetchData","clinicsRes","fetch","clinicsData","json","doctorsRes","doctorsData","loadRegistrations","error","console","page","res","data","docs","validateIdCard","idCard","regex","test","handleSubmit","e","preventDefault","response","method","headers","body","JSON","stringify","ok","handleInputChange","value","target","startsWith","field","split","renderPagination","children","Prev","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","i","Item","active","Next","className","variant","striped","bordered","hover","responsive","isArray","map","reg","index","medical_code","patient_id","_id","onSubmit","md","Group","Label","Control","type","onChange","required","Select","clinic","doctor","as","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/WDP/prj/clinic-app-FE/src/pages/RegistrationExam/RegistrationSystem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Pagination, Form, Button, Row, Col, Alert } from 'react-bootstrap';\r\n\r\nconst RegistrationSystem = () => {\r\n  // State management\r\n  const [registrations, setRegistrations] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    isNewPatient: true,\r\n    patientData: {\r\n      id_card: '',\r\n      name: '',\r\n      gender: 'male',\r\n      birth_date: '',\r\n      phone: '',\r\n      address: ''\r\n    },\r\n    clinic_id: '',\r\n    doctor_id: '',\r\n    priority: false,\r\n    symptoms: '',\r\n    note: ''\r\n  });\r\n\r\n  // Error state for form submission\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // Fetch initial data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch clinics\r\n        const clinicsRes = await fetch('http://localhost:5001/api/clinics');\r\n        const clinicsData = await clinicsRes.json();\r\n        setClinics(clinicsData || []); // Default to empty array if no data\r\n\r\n        // Fetch doctors\r\n        const doctorsRes = await fetch('http://localhost:5001/api/users/doctors');\r\n        const doctorsData = await doctorsRes.json();\r\n        setDoctors(doctorsData || []); // Default to empty array if no data\r\n\r\n        // Fetch registrations\r\n        await loadRegistrations(currentPage);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setErrorMessage('Lỗi khi tải dữ liệu, vui lòng thử lại.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [currentPage]);\r\n\r\n  // Load registrations with pagination\r\n  const loadRegistrations = async (page) => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5001/api/registerExam?page=${page}&limit=10`);\r\n      const data = await res.json();\r\n      setRegistrations(data.docs);\r\n      setTotalPages(data.totalPages);\r\n      setCurrentPage(data.page);\r\n    } catch (error) {\r\n      console.error('Error loading registrations:', error);\r\n      setErrorMessage('Lỗi khi tải danh sách đăng ký, vui lòng thử lại.');\r\n    }\r\n  };\r\n\r\n  // Validate ID card format\r\n  const validateIdCard = (idCard) => {\r\n    const regex = /^[0-9]{9,12}$/;\r\n    return regex.test(idCard);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validateIdCard(formData.patientData.id_card)) {\r\n      setErrorMessage('Số CMND không hợp lệ.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5001/api/registerExam', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        await loadRegistrations(currentPage);\r\n        setFormData({\r\n          ...formData,\r\n          patientData: {\r\n            id_card: '',\r\n            name: '',\r\n            gender: 'male',\r\n            birth_date: '',\r\n            phone: '',\r\n            address: ''\r\n          },\r\n          symptoms: '',\r\n          note: ''\r\n        });\r\n        setErrorMessage('');\r\n      } else {\r\n        setErrorMessage('Đăng ký thất bại, vui lòng thử lại.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      setErrorMessage('Có lỗi xảy ra khi gửi form, vui lòng thử lại.');\r\n    }\r\n  };\r\n\r\n  // Handle input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name.startsWith('patientData')) {\r\n      const field = name.split('.')[1];\r\n      setFormData({\r\n        ...formData,\r\n        patientData: {\r\n          ...formData.patientData,\r\n          [field]: value\r\n        }\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value\r\n      });\r\n    }\r\n  };\r\n\r\n  // Pagination controls\r\n  const renderPagination = () => (\r\n    <Pagination>\r\n      <Pagination.Prev \r\n        disabled={currentPage === 1} \r\n        onClick={() => loadRegistrations(currentPage - 1)}\r\n      />\r\n      {Array.from({ length: totalPages }, (_, i) => (\r\n        <Pagination.Item\r\n          key={i + 1}\r\n          active={i + 1 === currentPage}\r\n          onClick={() => loadRegistrations(i + 1)}\r\n        >\r\n          {i + 1}\r\n        </Pagination.Item>\r\n      ))}\r\n      <Pagination.Next \r\n        disabled={currentPage === totalPages} \r\n        onClick={() => loadRegistrations(currentPage + 1)}\r\n      />\r\n    </Pagination>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {/* Registration Table */}\r\n      <h3>Danh sách đăng ký</h3>\r\n      {errorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>STT</th>\r\n            <th>Mã KCB</th>\r\n            <th>Mã BN</th>\r\n            <th>Tên BN</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Array.isArray(registrations) && registrations.map((reg, index) => (\r\n            <tr key={reg._id}>\r\n              <td>{(currentPage - 1) * 10 + index + 1}</td>\r\n              <td>{reg.medical_code}</td>\r\n              <td>{reg.patient_id.patient_id}</td>\r\n              <td>{reg.patient_id.name}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      {renderPagination()}\r\n\r\n      {/* Add Registration Form */}\r\n      <h3 className=\"mt-5\">Thêm đăng ký mới</h3>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Số CMND</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"patientData.id_card\"\r\n                value={formData.patientData.id_card}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Họ tên</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"patientData.name\"\r\n                value={formData.patientData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Phòng khám</Form.Label>\r\n              <Form.Select\r\n                name=\"clinic_id\"\r\n                value={formData.clinic_id}\r\n                onChange={handleInputChange}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn phòng khám</option>\r\n                {Array.isArray(clinics) && clinics.map(clinic => (\r\n                  <option key={clinic._id} value={clinic._id}>\r\n                    {clinic.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Bác sĩ</Form.Label>\r\n              <Form.Select\r\n                name=\"doctor_id\"\r\n                value={formData.doctor_id}\r\n                onChange={handleInputChange}\r\n                required\r\n              >\r\n                <option value=\"\">Chọn bác sĩ</option>\r\n                {Array.isArray(doctors) && doctors.map(doctor => (\r\n                  <option key={doctor._id} value={doctor._id}>\r\n                    {doctor.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Triệu chứng</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                name=\"symptoms\"\r\n                value={formData.symptoms}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Đăng ký\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationSystem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}