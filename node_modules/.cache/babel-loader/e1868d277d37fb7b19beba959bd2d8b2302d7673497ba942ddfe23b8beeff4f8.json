{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\WDP\\\\prj\\\\clinic-app-FE\\\\src\\\\pages\\\\MedicineTypes\\\\MedicineTypes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardBody, Container, Row, Col, Input, Button, Table, Pagination, PaginationItem, PaginationLink, CardHeader, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"components/Headers/Header.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MedicineTypes = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [medicineTypes, setMedicineTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [expandedDescriptions, setExpandedDescriptions] = useState(new Set()); // State để theo dõi các mục đã mở rộng\n  const itemsPerPage = 5;\n\n  // Fetch dữ liệu từ API\n  useEffect(() => {\n    const fetchMedicineTypes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5001/api/medicineTypes\");\n        if (!response.ok) throw new Error(\"Không thể lấy dữ liệu\");\n        const {\n          data\n        } = await response.json();\n        setMedicineTypes(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMedicineTypes();\n  }, []);\n\n  // Hàm xử lý thu gọn/mở rộng nội dung\n  const toggleDescription = id => {\n    setExpandedDescriptions(prev => {\n      const newSet = new Set(prev);\n      newSet.has(id) ? newSet.delete(id) : newSet.add(id);\n      return newSet;\n    });\n  };\n\n  // Hàm cắt ngắn nội dung\n  const truncateText = function (text) {\n    let maxLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;\n    return text.length > maxLength ? text.substring(0, maxLength) + \"...\" : text;\n  };\n\n  // Lọc dữ liệu theo từ khóa tìm kiếm\n  const filteredMedicineTypes = medicineTypes.filter(type => {\n    const searchLower = searchTerm.toLowerCase();\n    return type.medicine_type_code.toLowerCase().includes(searchLower) || type.medicine_type_name.toLowerCase().includes(searchLower);\n  });\n\n  // Xử lý xóa loại thuốc\n  const handleDelete = async id => {\n    if (!window.confirm(\"Bạn có chắc chắn muốn xoá loại thuốc này không?\")) {\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5001/api/medicineTypes/${id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Xóa thất bại. Vui lòng thử lại!\");\n      }\n      setMedicineTypes(prev => prev.filter(type => type.id !== id));\n      toast.success(\"Xoá thành công!\", {\n        autoClose: 1000\n      });\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  // Xử lý chỉnh sửa loại thuốc\n  const handleEdit = id => {\n    navigate(`/admin/edit-medicine-type/${id}`);\n  };\n\n  // Xử lý phân trang\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  // Tính toán dữ liệu cho trang hiện tại\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredMedicineTypes.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(filteredMedicineTypes.length / itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4 align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-0\",\n            children: \"Danh S\\xE1ch Lo\\u1EA1i Thu\\u1ED1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroupAddon, {\n              addonType: \"prepend\",\n              children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"T\\xECm ki\\u1EBFm lo\\u1EA1i thu\\u1ED1c...\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          className: \"text-right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            tag: Link,\n            to: \"/add-medicine-types\",\n            color: \"primary\",\n            className: \"w-100\",\n            children: \"+ Th\\xEAm lo\\u1EA1i thu\\u1ED1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0110ang t\\u1EA3i...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: \"bg-light border-0\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-dark mb-0\",\n            children: \"Danh s\\xE1ch c\\xE1c lo\\u1EA1i thu\\u1ED1c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          className: \"p-0\",\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            hover: true,\n            responsive: true,\n            className: \"mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"thead-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"STT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"M\\xE3 Lo\\u1EA1i Thu\\u1ED1c\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"T\\xEAn Lo\\u1EA1i Thu\\u1ED1c\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"H\\xE0nh \\u0110\\u1ED9ng\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: currentItems.map((type, index) => {\n                const isExpanded = expandedDescriptions.has(type.id);\n                const showText = isExpanded ? type.medicine_type_name : truncateText(type.medicine_type_name);\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: indexOfFirstItem + index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: type.medicine_type_code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      maxWidth: \"300px\",\n                      whiteSpace: isExpanded ? \"pre-wrap\" : \"nowrap\",\n                      wordBreak: \"break-word\"\n                    },\n                    children: [showText, type.medicine_type_name.length > 30 && /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"link\",\n                      size: \"sm\",\n                      onClick: () => toggleDescription(type.id),\n                      className: \"p-0 ml-2\",\n                      children: isExpanded ? \"[Thu gọn]\" : \"[Xem thêm]\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      color: \"primary\",\n                      size: \"sm\",\n                      onClick: () => handleEdit(type.id),\n                      children: \"S\\u1EEDa\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"danger\",\n                      size: \"sm\",\n                      className: \"mr-2\",\n                      onClick: () => handleDelete(type.id),\n                      children: \"Xo\\xE1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 25\n                  }, this)]\n                }, type.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), !filteredMedicineTypes.length && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-4 text-muted\",\n            children: \"Kh\\xF4ng t\\xECm th\\u1EA5y k\\u1EBFt qu\\u1EA3 ph\\xF9 h\\u1EE3p\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"mt-3 justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n          disabled: currentPage === 1,\n          children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n            previous: true,\n            onClick: () => handlePageChange(currentPage - 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), [...Array(totalPages)].map((_, index) => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          active: index + 1 === currentPage,\n          children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n            onClick: () => handlePageChange(index + 1),\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(PaginationItem, {\n          disabled: currentPage === totalPages,\n          children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n            next: true,\n            onClick: () => handlePageChange(currentPage + 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MedicineTypes, \"omzwcG0XQbzc1Y/KryUC0xbWp1U=\", false, function () {\n  return [useNavigate];\n});\n_c = MedicineTypes;\nexport default MedicineTypes;\nvar _c;\n$RefreshReg$(_c, \"MedicineTypes\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardBody","Container","Row","Col","Input","Button","Table","Pagination","PaginationItem","PaginationLink","CardHeader","InputGroup","InputGroupAddon","InputGroupText","Link","useNavigate","toast","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","MedicineTypes","_s","navigate","searchTerm","setSearchTerm","medicineTypes","setMedicineTypes","loading","setLoading","error","setError","currentPage","setCurrentPage","expandedDescriptions","setExpandedDescriptions","Set","itemsPerPage","fetchMedicineTypes","response","fetch","ok","Error","data","json","message","toggleDescription","id","prev","newSet","has","delete","add","truncateText","text","maxLength","arguments","length","undefined","substring","filteredMedicineTypes","filter","type","searchLower","toLowerCase","medicine_type_code","includes","medicine_type_name","handleDelete","window","confirm","method","success","autoClose","handleEdit","handlePageChange","page","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","children","fileName","_jsxFileName","lineNumber","columnNumber","className","fluid","md","addonType","placeholder","value","onChange","e","target","tag","to","color","hover","responsive","map","index","isExpanded","showText","style","maxWidth","whiteSpace","wordBreak","size","onClick","disabled","previous","Array","_","active","next","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/WDP/prj/clinic-app-FE/src/pages/MedicineTypes/MedicineTypes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardHeader,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n} from \"reactstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Header from \"components/Headers/Header.js\";\r\n\r\nconst MedicineTypes = () => {\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [medicineTypes, setMedicineTypes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [expandedDescriptions, setExpandedDescriptions] = useState(new Set()); // State để theo dõi các mục đã mở rộng\r\n  const itemsPerPage = 5;\r\n\r\n  // Fetch dữ liệu từ API\r\n  useEffect(() => {\r\n    const fetchMedicineTypes = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5001/api/medicineTypes\");\r\n        if (!response.ok) throw new Error(\"Không thể lấy dữ liệu\");\r\n        const { data } = await response.json();\r\n        setMedicineTypes(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchMedicineTypes();\r\n  }, []);\r\n\r\n  // Hàm xử lý thu gọn/mở rộng nội dung\r\n  const toggleDescription = (id) => {\r\n    setExpandedDescriptions((prev) => {\r\n      const newSet = new Set(prev);\r\n      newSet.has(id) ? newSet.delete(id) : newSet.add(id);\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  // Hàm cắt ngắn nội dung\r\n  const truncateText = (text, maxLength = 30) => {\r\n    return text.length > maxLength ? text.substring(0, maxLength) + \"...\" : text;\r\n  };\r\n\r\n  // Lọc dữ liệu theo từ khóa tìm kiếm\r\n  const filteredMedicineTypes = medicineTypes.filter((type) => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n    return (\r\n      type.medicine_type_code.toLowerCase().includes(searchLower) ||\r\n      type.medicine_type_name.toLowerCase().includes(searchLower)\r\n    );\r\n  });\r\n\r\n  // Xử lý xóa loại thuốc\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Bạn có chắc chắn muốn xoá loại thuốc này không?\")) {\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5001/api/medicineTypes/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Xóa thất bại. Vui lòng thử lại!\");\r\n      }\r\n      setMedicineTypes((prev) => prev.filter((type) => type.id !== id));\r\n      toast.success(\"Xoá thành công!\", { autoClose: 1000 });\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  // Xử lý chỉnh sửa loại thuốc\r\n  const handleEdit = (id) => {\r\n    navigate(`/admin/edit-medicine-type/${id}`);\r\n  };\r\n\r\n  // Xử lý phân trang\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  // Tính toán dữ liệu cho trang hiện tại\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = filteredMedicineTypes.slice(\r\n    indexOfFirstItem,\r\n    indexOfLastItem\r\n  );\r\n  const totalPages = Math.ceil(filteredMedicineTypes.length / itemsPerPage);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt-4\" fluid>\r\n        <Row className=\"mb-4 align-items-center\">\r\n          <Col md={6}>\r\n            <h3 className=\"mb-0\">Danh Sách Loại Thuốc</h3>\r\n          </Col>\r\n          <Col md={3}>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>\r\n                  <i className=\"fas fa-search\" />\r\n                </InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Tìm kiếm loại thuốc...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n          <Col md={3} className=\"text-right\">\r\n            <Button\r\n              tag={Link}\r\n              to=\"/add-medicine-types\"\r\n              color=\"primary\"\r\n              className=\"w-100\"\r\n            >\r\n              + Thêm loại thuốc\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        {loading ? (\r\n          <div>Đang tải...</div>\r\n        ) : error ? (\r\n          <div className=\"text-danger\">{error}</div>\r\n        ) : (\r\n          <Card className=\"shadow\">\r\n            <CardHeader className=\"bg-light border-0\">\r\n              <h4 className=\"text-dark mb-0\">Danh sách các loại thuốc</h4>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0\">\r\n              <Table hover responsive className=\"mb-0\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th>STT</th>\r\n                    <th>Mã Loại Thuốc</th>\r\n                    <th>Tên Loại Thuốc</th>\r\n                    <th>Hành Động</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {currentItems.map((type, index) => {\r\n                    const isExpanded = expandedDescriptions.has(type.id);\r\n                    const showText = isExpanded\r\n                      ? type.medicine_type_name\r\n                      : truncateText(type.medicine_type_name);\r\n\r\n                    return (\r\n                      <tr key={type.id}>\r\n                        <td>{indexOfFirstItem + index + 1}</td>\r\n                        <td>{type.medicine_type_code}</td>\r\n                        <td\r\n                          style={{\r\n                            maxWidth: \"300px\",\r\n                            whiteSpace: isExpanded ? \"pre-wrap\" : \"nowrap\",\r\n                            wordBreak: \"break-word\",\r\n                          }}\r\n                        >\r\n                          {showText}\r\n                          {type.medicine_type_name.length > 30 && (\r\n                            <Button\r\n                              color=\"link\"\r\n                              size=\"sm\"\r\n                              onClick={() => toggleDescription(type.id)}\r\n                              className=\"p-0 ml-2\"\r\n                            >\r\n                              {isExpanded ? \"[Thu gọn]\" : \"[Xem thêm]\"}\r\n                            </Button>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleEdit(type.id)}\r\n                          >\r\n                            Sửa\r\n                          </Button>\r\n                          <Button\r\n                            color=\"danger\"\r\n                            size=\"sm\"\r\n                            className=\"mr-2\"\r\n                            onClick={() => handleDelete(type.id)}\r\n                          >\r\n                            Xoá\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n\r\n              {!filteredMedicineTypes.length && (\r\n                <div className=\"text-center py-4 text-muted\">\r\n                  Không tìm thấy kết quả phù hợp\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Phân trang */}\r\n        {totalPages > 1 && (\r\n          <Pagination className=\"mt-3 justify-content-center\">\r\n            <PaginationItem disabled={currentPage === 1}>\r\n              <PaginationLink\r\n                previous\r\n                onClick={() => handlePageChange(currentPage - 1)}\r\n              />\r\n            </PaginationItem>\r\n            {[...Array(totalPages)].map((_, index) => (\r\n              <PaginationItem active={index + 1 === currentPage} key={index}>\r\n                <PaginationLink onClick={() => handlePageChange(index + 1)}>\r\n                  {index + 1}\r\n                </PaginationLink>\r\n              </PaginationItem>\r\n            ))}\r\n            <PaginationItem disabled={currentPage === totalPages}>\r\n              <PaginationLink\r\n                next\r\n                onClick={() => handlePageChange(currentPage + 1)}\r\n              />\r\n            </PaginationItem>\r\n          </Pagination>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MedicineTypes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}