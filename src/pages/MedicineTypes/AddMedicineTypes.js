import React, { useState } from "react";
import {
    Card,
    CardBody,
    Container,
    Row,
    Col,
    Form,
    FormGroup,
    Label,
    Input,
    Button,
} from "reactstrap";
import { useNavigate } from "react-router-dom";
import axios from "axios";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import Header from "../../components/Headers/Header"; // S·ª≠a l·∫°i ƒë∆∞·ªùng d·∫´n Header n·∫øu c·∫ßn

const AddMedicineTypes = () => {
    const navigate = useNavigate();
    const [medicineType, setMedicineType] = useState({
        medicine_type_code: "",
        medicine_type_name: "",
    });

    const [loading, setLoading] = useState(false); // Tr·∫°ng th√°i loading

    // X·ª≠ l√Ω thay ƒë·ªïi input
    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setMedicineType({ ...medicineType, [name]: value });
    };

    // G·ª≠i d·ªØ li·ªáu l√™n API
    const handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);

        try {
            const response = await axios.post(
                "http://localhost:5001/api/medicineTypes",
                medicineType,
                { headers: { "Content-Type": "application/json" } }
            );

            if (response.status === 201) {
                toast.success("üéâ Th√™m lo·∫°i thu·ªëc th√†nh c√¥ng!", { position: "top-right", autoClose: 1000 });
                setTimeout(() => navigate("/medicine-types"), 1100); // Ch·ªù toast xong m·ªõi chuy·ªÉn trang
            }
        } catch (err) {
            toast.error("‚ùå L·ªói: Kh√¥ng th·ªÉ th√™m lo·∫°i thu·ªëc!", { position: "top-right", autoClose: 3000 });
            console.error("Error adding medicine type:", err.response?.data || err.message);
        } finally {
            setLoading(false);
        }
    };

    return (
        <>
            <Header />
            <Container fluid className="mt-4">
                <Row>
                    <Col>
                        <h3 className="text-dark">Th√™m Lo·∫°i Thu·ªëc</h3>
                        <p className="text-muted">Qu·∫£n L√Ω Lo·∫°i Thu·ªëc / Th√™m Lo·∫°i Thu·ªëc</p>
                    </Col>
                </Row>

                <Card className="mt-4">
                    <CardBody>
                        <Row>
                            <Col md="6">
                                <h4 className="text-dark">Th√¥ng tin c∆° b·∫£n</h4>
                                <p className="text-muted">ƒêi·ªÅn t·∫•t c·∫£ th√¥ng tin b√™n d∆∞·ªõi</p>
                                <Form onSubmit={handleSubmit}>
                                    <FormGroup>
                                        <Label for="medicine_type_code">
                                            M√£ Lo·∫°i Thu·ªëc <span className="text-danger">*</span>
                                        </Label>
                                        <Input
                                            type="text"
                                            id="medicine_type_code"
                                            name="medicine_type_code"
                                            placeholder="Nh·∫≠p m√£ lo·∫°i thu·ªëc"
                                            value={medicineType.medicine_type_code}
                                            onChange={handleInputChange}
                                            required
                                        />
                                    </FormGroup>
                                    <FormGroup>
                                        <Label for="medicine_type_name">
                                            T√™n Lo·∫°i Thu·ªëc <span className="text-danger">*</span>
                                        </Label>
                                        <Input
                                            type="text"
                                            id="medicine_type_name"
                                            name="medicine_type_name"
                                            placeholder="Nh·∫≠p t√™n lo·∫°i thu·ªëc"
                                            value={medicineType.medicine_type_name}
                                            onChange={handleInputChange}
                                            required
                                        />
                                    </FormGroup>
                                    <Button color="success" type="submit" className="mr-2" disabled={loading}>
                                        {loading ? "ƒêang l∆∞u..." : "L∆∞u L·∫°i"}
                                    </Button>
                                    <Button color="danger" onClick={() => navigate("/medicine-types")}>
                                        Quay l·∫°i
                                    </Button>
                                </Form>
                            </Col>
                            <Col md="6"></Col>
                        </Row>
                    </CardBody>
                </Card>
            </Container>

            <ToastContainer />
        </>
    );
};

export default AddMedicineTypes;
